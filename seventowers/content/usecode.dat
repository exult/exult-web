<?php
	$ICONS = array(
    		"usecode",
    		"ucctutorials",
    		"uccreference",
    		"ucchighlighter"
    	);
	$BARICONS = $ICONS;

/*	++++ Prototype file entry
			""	=>	array(
					"PAGE"	=>	,
					"TITLE"	=>	"",
				),
*/
	$HIGHLIGHTERS = "Usecode C syntax highlighter";
	$FILEINFO = array(
			"exult_intrinsics.dat"	=>	array(
					"PAGE"	=>	2,
					"TITLE"	=>	"Exult intrinsic reference",
				),
			"ucc_scripting.dat"	=>	array(
					"PAGE"	=>	1,
					"TITLE"	=>	"Usecode C scripting tutorial",
				),
			"ucc-context.zip"	=>	array(
					"PAGE"	=>	3,
					"TITLE"	=>	$HIGHLIGHTERS . " for ConTEXT",
				),
			"ucc-gtksourceview.tar.gz"	=>	array(
					"PAGE"	=>	3,
					"TITLE"	=>	$HIGHLIGHTERS . "s for GtkSourceView",
				),
		);
	$EXTENSIONS = array("dat","zip","tar.gz");
	
	$DESCS = array(
			array(
				"NAME"		=>	"About Usecode C",
				"SHOWICON"	=>	false,		"ICON"	=>	"",
				"TEXT"		=>	array(
						"Usecode C is a scripting language created by the
$EXULT_LINK team which can be compiled to usecode. It allows the creation of
usecode patches for the Ultima VII games, thus allowing changes to the behavior
of objects, the addition of new dialogs and new cutscenes."
					)
				),
			array(
				"NAME"		=>	"About the Usecode C tutorials",
				"SHOWICON"	=>	false,		"ICON"	=>	"",
				"TEXT"		=>	array(
						"The Usecode C tutorials in this page are meant to help
new usecoders to make sense of Usecode C. They are meant to be a complete
introduction to the language. They most liikely are not, and I welcome any
suggestions on how to improve them.",
						"I also intend to place these documents in the $EXULT_LINK
source code and documentation; if they are not there yet, I am getting there
soon (although complaining might prove effective :-)."
					)
				),
			array(
				"NAME"		=>	"About the Usecode C reference",
				"SHOWICON"	=>	false,		"ICON"	=>	"",
				"TEXT"		=>	array(
						"This section is intended to provide extensive
documentation about the Usecode C language. It is meant to be throughout, and it
can be quite dry at places. These documents are not meant for the newbie,
although they will surely help.",
						"I also intend to place these documents in the $EXULT_LINK
source code and documentation; if they are not there yet, I am getting there
soon (although complaining might prove effective :-)."
					)
				),
			array(
				"NAME"		=>	"About the Usecode C highlighters",
				"SHOWICON"	=>	false,		"ICON"	=>	"",
				"TEXT"		=>	array(
						"This section houses syntax highlighters for Usecode C.
These are for specific text editors, and are meant to aid in writing usecode.
Their main virtue is keeping stupid syntax errors away.",
						"There are two syntax highlighter definitions here: one
for a specific Windows text editor called " . extern_link("ConTEXT",
"http://www.context.cx") . ", and the other for a whole class of text editors
for *nix systems - basically, any editor or IDE in those systems that uses " .
extern_link("GtkSourceView", "http://projects.gnome.org/gtksourceview/") .
" to highlight code will automatically use the highlighter for usecode files
if you follow the enclosed installation instructions."
					)
				),
			);
	
	$NOTICES = array(
            "TITLE"		=>	"Important Notice",
            "TEXT"		=>	array(
            		"In order to be able to use new usecode in the Ultima VII
games, you must first compile the usecode using the Usecode C Compiler (ucc).
You can obtain a Windows binary of the compiler in the following link: " .
	extern_link("Exult Win32 Tools snapshot",
				"http://exult.sourceforge.net/snapshots/ExultTools.exe") . ".
If you wisely don't use Windows, you will have to compile your own binary."
			)
		);

	$FILELIST = gather_docs_info($FILEINFO, count($PAGES[$section]["HEADS"]), $EXTENSIONS);
	make_download_page($DESCS[$page], $NOTICES);
	output_file_links($FILELIST, $ICONS, $page);
	
	// Yes, this is a violation of the separation of content and code. So what?
	function gather_docs_info($fileinfo, $nheads, $exts)
	{
		global $tpl;
		global $TITLE_IMAGE;
		
		for ($i = 0; $i < $nheads; $i++)
			$datfiles[] = array();
		
		$baseurl = "code.php?TITLE_IMAGE=$TITLE_IMAGE&amp;DATAFILE=";
		foreach($exts as $ext)
		{
			$dir = get_file_info($ext);
			$dir = $dir["DIR"];
            foreach (glob("$dir/*.$ext") as $file)
            {
				if ($ext == "dat")
				{
	            	$filename = basename($file);
	    			if (array_key_exists($filename, $fileinfo))
	    			{
	     				$finfo = $fileinfo["$filename"];
	        			$datfiles[$finfo["PAGE"]][] = array(
	        					"NAME"			=>	array(
	        							"DATFILE"	=>	$filename,
	        							"TARGET"	=>	$baseurl
	        						),
	        					"EXT"			=>	$ext,
	        					"TITLE"			=>	$finfo["TITLE"],
	        					"BLURBNFO"		=>	array(
	        							local_link("view online", "$baseurl$filename&amp;TYPE=0&amp;OUTPUT=text"),
	        							local_link("save to disk", "$baseurl$filename&amp;TYPE=1&amp;OUTPUT=text")
	        					)
	        				);
	        		}
	        	}
        		else
        		{
	            	$filename = basename($file, ".$ext");
	    			if (array_key_exists("$filename.$ext", $fileinfo))
	    			{
	     				$finfo = $fileinfo["$filename.$ext"];
	    				$datfiles[$finfo["PAGE"]][] = array(
	        					"NAME"			=>	$filename,
	        					"EXT"			=>	$ext,
	        					"TITLE"			=>	$finfo["TITLE"],
	        					"BLURBNFO"		=>	$finfo["README"]
	        				);
	        		}
        		}
    		}
        }
        return $datfiles;
	}
?>
